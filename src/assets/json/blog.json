{
  "posts": [
    {
      "meta": {
        "id": "nuxt-dart-sass",
        "title": "Nuxt.jsプロジェクトでDart Sassを使う",
        "description": "Nuxt.jsプロジェクトでDart Sassを使った時のメモ。",
        "category": "Cording",
        "tags": [
          "JavaScript",
          "Nuxt.js",
          "Sass",
          "Dart Sass",
          "Dart"
        ],
        "status": "publish",
        "created_at": "2019-10-24",
        "updated_at": ""
      },
      "body": {
        "text": "\n\nNuxt.jsプロジェクトにDart Sassを導入してきた時のメモです。\n\n次の環境を前提としていますが、バージョンがよっぽど古かったりしない限りは問題ないはず。\n\nNode.js v10.16.3\nNuxt.js v2.10.2\nsass(Dart Sass) v1.23.1\ncreate-nuxt-appなどでNuxt.jsのプロジェクトを構築済み\nscssを使用\n\nDart Sassとは\n\nDart Sassとは、Googleが開発するDartというプログラミング言語で作成された、Sassのコンパイラです。DartはJavaScriptにコンパイル可能なため、sassというパッケージ名でnpmに公開されており、node-sassと同じようにnpmインストールできます。\n\nまたDart Sassには、Sassの新しい機能が先行実装される予定や、Node.jsのバージョン依存問題も解消できるなどのメリットがあります。そのため、今後のSassコンパイラのスタンダードになることも考えられます。\n\nNuxt.jsプロジェクトにDart Sassを導入する方法\n\ncreate-nuxt-appなどでNuxt.jsのプロジェクトを構築済みの状況を前提で紹介します。\n\nNuxt.jsでDart Sassを使うためにはsass(Dart Sass)とsass-loaderが必要です。さらに、コンパイル速度を向上させるためにfibersのインストールも推奨されているので、次のようにyarnやnpmでパッケージをインストールします。\n\nyarn add -D sass sass-loader fibers\n\n次に、nuxt.config.jsにsass-loaderの設定を追記します。node-sassの場合は特に何も設定する必要なく使用できましたが、Dart Sassを使用する場合は現状追加で設定が必要なようです。\n\nDart Sassに関連する部分だけ抜粋すると次のようになります。\n\nconst Sass = require('sass')\nconst Fiber = require('fibers')\n\nexport default {\n  ...\n  build: {\n    loaders: {\n      scss: {\n        implementation: Sass,\n        sassOptions: {\n          fiber: Fiber\n        }\n      }\n    }\n  }\n}\n\n以上でインストールと設定は終わりです。.vue にDart Sassを書くときは、node-sassと同じように、 `` を付与するだけで大丈夫です。\n\n  Hello World!\n\nexport default {\n  name: 'HelloWorld'\n}\n\np { color: tomato; }\n",
        "md": "\n\nNuxt.jsプロジェクトにDart Sassを導入してきた時のメモです。\n\n次の環境を前提としていますが、バージョンがよっぽど古かったりしない限りは問題ないはず。\n\n- Node.js v10.16.3\n- Nuxt.js v2.10.2\n- sass(Dart Sass) v1.23.1\n- [create-nuxt-app](https://github.com/nuxt/create-nuxt-app)などでNuxt.jsのプロジェクトを構築済み\n- scssを使用\n\n## Dart Sassとは\n\n[Dart Sass](https://sass-lang.com/dart-sass)とは、Googleが開発する[Dart](https://dart.dev/)というプログラミング言語で作成された、Sassのコンパイラです。DartはJavaScriptにコンパイル可能なため、[sass](https://github.com/sass/dart-sass)というパッケージ名でnpmに公開されており、[node-sass](https://github.com/sass/node-sass)と同じようにnpmインストールできます。\n\nまたDart Sassには、Sassの新しい機能が先行実装される予定や、Node.jsのバージョン依存問題も解消できるなどのメリットがあります。そのため、今後のSassコンパイラのスタンダードになることも考えられます。\n\n## Nuxt.jsプロジェクトにDart Sassを導入する方法\n\n[create-nuxt-app](https://github.com/nuxt/create-nuxt-app)などでNuxt.jsのプロジェクトを構築済みの状況を前提で紹介します。\n\nNuxt.jsでDart Sassを使うためには[sass](https://github.com/sass/dart-sass)(Dart Sass)と[sass-loader](https://github.com/webpack-contrib/sass-loader)が必要です。さらに、コンパイル速度を向上させるために[fibers](https://github.com/laverdet/node-fibers)のインストールも推奨されているので、次のようにyarnやnpmでパッケージをインストールします。\n\n```shell\nyarn add -D sass sass-loader fibers\n```\n\n次に、nuxt.config.jsにsass-loaderの設定を追記します。node-sassの場合は特に何も設定する必要なく使用できましたが、Dart Sassを使用する場合は現状追加で設定が必要なようです。\n\nDart Sassに関連する部分だけ抜粋すると次のようになります。\n\n```js\nconst Sass = require('sass')\nconst Fiber = require('fibers')\n\nexport default {\n  ...\n  build: {\n    loaders: {\n      scss: {\n        implementation: Sass,\n        sassOptions: {\n          fiber: Fiber\n        }\n      }\n    }\n  }\n}\n```\n\n以上でインストールと設定は終わりです。`.vue` にDart Sassを書くときは、node-sassと同じように、 `<style lang=\"scss\">` を付与するだけで大丈夫です。\n\n```vue\n<template>\n  <p>Hello World!</p>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld'\n}\n</script>\n\n<style lang=\"scss\">\np { color: tomato; }\n</style>\n```\n",
        "html": "<p>Nuxt.jsプロジェクトにDart Sassを導入してきた時のメモです。</p>\n<p>次の環境を前提としていますが、バージョンがよっぽど古かったりしない限りは問題ないはず。</p>\n<ul>\n<li>Node.js v10.16.3</li>\n<li>Nuxt.js v2.10.2</li>\n<li>sass(Dart Sass) v1.23.1</li>\n<li><a href=\"https://github.com/nuxt/create-nuxt-app\">create-nuxt-app</a>などでNuxt.jsのプロジェクトを構築済み</li>\n<li>scssを使用</li>\n</ul>\n<h2>Dart Sassとは</h2>\n<p><a href=\"https://sass-lang.com/dart-sass\">Dart Sass</a>とは、Googleが開発する<a href=\"https://dart.dev/\">Dart</a>というプログラミング言語で作成された、Sassのコンパイラです。DartはJavaScriptにコンパイル可能なため、<a href=\"https://github.com/sass/dart-sass\">sass</a>というパッケージ名でnpmに公開されており、<a href=\"https://github.com/sass/node-sass\">node-sass</a>と同じようにnpmインストールできます。</p>\n<p>またDart Sassには、Sassの新しい機能が先行実装される予定や、Node.jsのバージョン依存問題も解消できるなどのメリットがあります。そのため、今後のSassコンパイラのスタンダードになることも考えられます。</p>\n<h2>Nuxt.jsプロジェクトにDart Sassを導入する方法</h2>\n<p><a href=\"https://github.com/nuxt/create-nuxt-app\">create-nuxt-app</a>などでNuxt.jsのプロジェクトを構築済みの状況を前提で紹介します。</p>\n<p>Nuxt.jsでDart Sassを使うためには<a href=\"https://github.com/sass/dart-sass\">sass</a>(Dart Sass)と<a href=\"https://github.com/webpack-contrib/sass-loader\">sass-loader</a>が必要です。さらに、コンパイル速度を向上させるために<a href=\"https://github.com/laverdet/node-fibers\">fibers</a>のインストールも推奨されているので、次のようにyarnやnpmでパッケージをインストールします。</p>\n<pre><code class=\"language-shell\">yarn add -D sass sass-loader fibers\n</code></pre>\n<p>次に、nuxt.config.jsにsass-loaderの設定を追記します。node-sassの場合は特に何も設定する必要なく使用できましたが、Dart Sassを使用する場合は現状追加で設定が必要なようです。</p>\n<p>Dart Sassに関連する部分だけ抜粋すると次のようになります。</p>\n<pre><code class=\"language-js\">const Sass = require('sass')\nconst Fiber = require('fibers')\n\nexport default {\n  ...\n  build: {\n    loaders: {\n      scss: {\n        implementation: Sass,\n        sassOptions: {\n          fiber: Fiber\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>以上でインストールと設定は終わりです。<code>.vue</code> にDart Sassを書くときは、node-sassと同じように、 <code>&lt;style lang=&quot;scss&quot;&gt;</code> を付与するだけで大丈夫です。</p>\n<pre><code class=\"language-vue\">&lt;template&gt;\n  &lt;p&gt;Hello World!&lt;/p&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  name: 'HelloWorld'\n}\n&lt;/script&gt;\n\n&lt;style lang=&quot;scss&quot;&gt;\np { color: tomato; }\n&lt;/style&gt;\n</code></pre>\n"
      }
    },
    {
      "meta": {
        "id": "post-template-02",
        "title": "サンプル記事",
        "description": "このブログの記事テンプレートです。",
        "category": "Design",
        "tags": [
          "HTML",
          "CSS",
          "JavaScript"
        ],
        "status": "draft",
        "created_at": "2019-10-01",
        "updated_at": "2019-10-01"
      },
      "body": {
        "text": "\nはじめに\n\nこのブログの記事はMarkdown記法で作成されています。\n\nテキスト\n\nテキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト。 テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト。\n\nテキスト リンクテキスト テキスト テキスト。\n\nテキスト 強調テキスト テキスト テキスト。\n\nテキスト コードテキスト テキスト テキスト。\n\n見出し\n\n見出しレベル2\n\n見出しレベル3\n\n見出しレベル4\n\n見出しレベル5\n\n見出しレベル6\n\nリスト\n\nテキスト\nテキスト\n  テキスト\n  テキスト\nテキスト\nテキスト\n\nテキスト\nテキスト\nテキスト\nテキスト\n\nブロック\n\n> 引用ブロック\n> 引用ブロック\n> 引用ブロック\n\nconst text = 'コードブロック'\nconsole.log(text)\n",
        "md": "\n\n## はじめに\n\nこのブログの記事はMarkdown記法で作成されています。\n\n## テキスト\n\nテキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト。 テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト。\n\nテキスト [リンクテキスト](./) テキスト テキスト。\n\nテキスト **強調テキスト** テキスト テキスト。\n\nテキスト `コードテキスト` テキスト テキスト。\n\n## 見出し\n\n## 見出しレベル2\n\n### 見出しレベル3\n\n#### 見出しレベル4\n\n##### 見出しレベル5\n\n###### 見出しレベル6\n\n## リスト\n\n- テキスト\n- テキスト\n  - テキスト\n  - テキスト\n- テキスト\n- テキスト\n\n1. テキスト\n1. テキスト\n1. テキスト\n1. テキスト\n\n## ブロック\n\n> 引用ブロック\n> 引用ブロック\n> 引用ブロック\n\n```js\nconst text = 'コードブロック'\nconsole.log(text)\n```\n",
        "html": "<h2>はじめに</h2>\n<p>このブログの記事はMarkdown記法で作成されています。</p>\n<h2>テキスト</h2>\n<p>テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト。 テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト テキスト。</p>\n<p>テキスト <a href=\"./\">リンクテキスト</a> テキスト テキスト。</p>\n<p>テキスト <strong>強調テキスト</strong> テキスト テキスト。</p>\n<p>テキスト <code>コードテキスト</code> テキスト テキスト。</p>\n<h2>見出し</h2>\n<h2>見出しレベル2</h2>\n<h3>見出しレベル3</h3>\n<h4>見出しレベル4</h4>\n<h5>見出しレベル5</h5>\n<h6>見出しレベル6</h6>\n<h2>リスト</h2>\n<ul>\n<li>テキスト</li>\n<li>テキスト\n<ul>\n<li>テキスト</li>\n<li>テキスト</li>\n</ul>\n</li>\n<li>テキスト</li>\n<li>テキスト</li>\n</ul>\n<ol>\n<li>テキスト</li>\n<li>テキスト</li>\n<li>テキスト</li>\n<li>テキスト</li>\n</ol>\n<h2>ブロック</h2>\n<blockquote>\n<p>引用ブロック\n引用ブロック\n引用ブロック</p>\n</blockquote>\n<pre><code class=\"language-js\">const text = 'コードブロック'\nconsole.log(text)\n</code></pre>\n"
      }
    }
  ],
  "tags": [
    "Sass",
    "Nuxt.js",
    "JavaScript",
    "HTML",
    "Dart Sass",
    "Dart",
    "CSS"
  ]
}