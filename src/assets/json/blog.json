{
  "posts": [
    {
      "meta": {
        "id": "nuxt-dart-sass",
        "title": "Nuxt.jsでDart Sassを使う",
        "description": "Nuxt.jsのプロジェクトにDart Sassを導入してみたので、導入方法の紹介です。",
        "category": "Cording",
        "tags": [
          "Nuxt.js",
          "Sass",
          "Dart Sass"
        ],
        "status": "draft",
        "created_at": "2019-10-01",
        "updated_at": ""
      },
      "body": {
        "text": "\nはじめに\n\nこのブログはNuxt.jsで作成されており、スタイリングにはDart Sass(Scss)を使用しています。\n\nこの記事では、Nuxt.jsプロジェクトにDart Sassを導入する方法などを紹介します。\n\nDart Sassとは\n\nDart Sassは、Googleが開発するDartというプログラミング言語で作成されたSassのコンパイラです。従来のnode-sassと同じようにnpmからインストールすることが可能で、Node.jsのバージョンに依存しないというメリットがあります。\n\nまた、Sassの新しい記法などは今後Dart Sassで先行実装されるようなので、今後Sassのスタンダードになることも考えられます。\n\nNuxt.jsでDart Sassを使う方法\n\nパッケージのインストール\n\nNuxt.jsでDart Sassを使うためにはsass(Dart Sass)とsass-loaderが必要です。さらにコンパイル速度を向上させるためにfibersのインストールも推奨されているので、次のようにyarnもしくはnpmでパッケージをインストールします。\n\nyarn add -D sass sass-loader fibers\n\nnuxt.config.js\n\nNuxt.jsでDart Sassを使用する時はnode-sassと違い、nuxt.config.jsにsass-loaderの設定を追記する必要があります。\n\nDart Sassに関連する部分だけ抜粋すると次のようになります。\n\nconst Sass = require('sass')\nconst Fiber = require('fibers')\n\nexport default {\n  ...\n  build: {\n    loaders: {\n      scss: {\n        implementation: Sass,\n        sassOptions: {\n          fiber: Fiber\n        }\n      }\n    }\n  }\n}\n\ncomponentsなどで使う時\n\ncomponentsなどの.vueファイルで使用する時はnode-sassと同じで、style要素にlang=\"scss\"やlang=\"sass\"を任意で付与しましょう。\n\n  Hello World!\n\nexport default {\n  name: 'HelloWorld'\n}\n\np { color: tomato; }\n\nさいごに\n\n実際にNuxt.jsプロジェクトにDart Sassを導入してみましたが、node-sassからの以降はとても簡単だなと思いました。現状、Dart Sass特有の技術で作成されているわけではありませんが、今後@useや@forwardといった新しいモジュールシステムに置き換えようと思っています。\n\nまた、Nuxt.jsプロジェクトに限った話ではなくDart Sassとnode-sassのコンパイルオプションは基本的に同じなので、node-sassからDart Sassへの移行も特に問題なく行うことができると思うので、気軽に導入を試すことができます。\n",
        "md": "\n\n## はじめに\n\nこのブログはNuxt.jsで作成されており、スタイリングにはDart Sass(Scss)を使用しています。\n\nこの記事では、Nuxt.jsプロジェクトにDart Sassを導入する方法などを紹介します。\n\n## Dart Sassとは\n\n[Dart Sass](https://sass-lang.com/dart-sass)は、Googleが開発する[Dart](https://dart.dev/)というプログラミング言語で作成されたSassのコンパイラです。従来の[node-sass](https://github.com/sass/node-sass)と同じようにnpmからインストールすることが可能で、Node.jsのバージョンに依存しないというメリットがあります。\n\nまた、Sassの新しい記法などは今後Dart Sassで先行実装されるようなので、今後Sassのスタンダードになることも考えられます。\n\n## Nuxt.jsでDart Sassを使う方法\n\n### パッケージのインストール\n\nNuxt.jsでDart Sassを使うためには[sass](https://github.com/sass/dart-sass)(Dart Sass)と[sass-loader](https://github.com/webpack-contrib/sass-loader)が必要です。さらにコンパイル速度を向上させるために[fibers](https://github.com/laverdet/node-fibers)のインストールも推奨されているので、次のようにyarnもしくはnpmでパッケージをインストールします。\n\n```shell\nyarn add -D sass sass-loader fibers\n```\n\n### nuxt.config.js\n\nNuxt.jsでDart Sassを使用する時はnode-sassと違い、nuxt.config.jsにsass-loaderの設定を追記する必要があります。\n\nDart Sassに関連する部分だけ抜粋すると次のようになります。\n\n```js\nconst Sass = require('sass')\nconst Fiber = require('fibers')\n\nexport default {\n  ...\n  build: {\n    loaders: {\n      scss: {\n        implementation: Sass,\n        sassOptions: {\n          fiber: Fiber\n        }\n      }\n    }\n  }\n}\n```\n\n### componentsなどで使う時\n\ncomponentsなどの`.vue`ファイルで使用する時はnode-sassと同じで、style要素に`lang=\"scss\"`や`lang=\"sass\"`を任意で付与しましょう。\n\n```vue\n<template>\n  <p>Hello World!</p>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld'\n}\n</script>\n\n<style lang=\"scss\">\np { color: tomato; }\n</style>\n```\n\n## さいごに\n\n実際にNuxt.jsプロジェクトにDart Sassを導入してみましたが、node-sassからの以降はとても簡単だなと思いました。現状、Dart Sass特有の技術で作成されているわけではありませんが、今後`@use`や`@forward`といった新しいモジュールシステムに置き換えようと思っています。\n\nまた、Nuxt.jsプロジェクトに限った話ではなくDart Sassとnode-sassのコンパイルオプションは基本的に同じなので、node-sassからDart Sassへの移行も特に問題なく行うことができると思うので、気軽に導入を試すことができます。\n",
        "html": "<h2>はじめに</h2>\n<p>このブログはNuxt.jsで作成されており、スタイリングにはDart Sass(Scss)を使用しています。</p>\n<p>この記事では、Nuxt.jsプロジェクトにDart Sassを導入する方法などを紹介します。</p>\n<h2>Dart Sassとは</h2>\n<p><a href=\"https://sass-lang.com/dart-sass\">Dart Sass</a>は、Googleが開発する<a href=\"https://dart.dev/\">Dart</a>というプログラミング言語で作成されたSassのコンパイラです。従来の<a href=\"https://github.com/sass/node-sass\">node-sass</a>と同じようにnpmからインストールすることが可能で、Node.jsのバージョンに依存しないというメリットがあります。</p>\n<p>また、Sassの新しい記法などは今後Dart Sassで先行実装されるようなので、今後Sassのスタンダードになることも考えられます。</p>\n<h2>Nuxt.jsでDart Sassを使う方法</h2>\n<h3>パッケージのインストール</h3>\n<p>Nuxt.jsでDart Sassを使うためには<a href=\"https://github.com/sass/dart-sass\">sass</a>(Dart Sass)と<a href=\"https://github.com/webpack-contrib/sass-loader\">sass-loader</a>が必要です。さらにコンパイル速度を向上させるために<a href=\"https://github.com/laverdet/node-fibers\">fibers</a>のインストールも推奨されているので、次のようにyarnもしくはnpmでパッケージをインストールします。</p>\n<pre><code class=\"language-shell\">yarn add -D sass sass-loader fibers\n</code></pre>\n<h3>nuxt.config.js</h3>\n<p>Nuxt.jsでDart Sassを使用する時はnode-sassと違い、nuxt.config.jsにsass-loaderの設定を追記する必要があります。</p>\n<p>Dart Sassに関連する部分だけ抜粋すると次のようになります。</p>\n<pre><code class=\"language-js\">const Sass = require('sass')\nconst Fiber = require('fibers')\n\nexport default {\n  ...\n  build: {\n    loaders: {\n      scss: {\n        implementation: Sass,\n        sassOptions: {\n          fiber: Fiber\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<h3>componentsなどで使う時</h3>\n<p>componentsなどの<code>.vue</code>ファイルで使用する時はnode-sassと同じで、style要素に<code>lang=&quot;scss&quot;</code>や<code>lang=&quot;sass&quot;</code>を任意で付与しましょう。</p>\n<pre><code class=\"language-vue\">&lt;template&gt;\n  &lt;p&gt;Hello World!&lt;/p&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  name: 'HelloWorld'\n}\n&lt;/script&gt;\n\n&lt;style lang=&quot;scss&quot;&gt;\np { color: tomato; }\n&lt;/style&gt;\n</code></pre>\n<h2>さいごに</h2>\n<p>実際にNuxt.jsプロジェクトにDart Sassを導入してみましたが、node-sassからの以降はとても簡単だなと思いました。現状、Dart Sass特有の技術で作成されているわけではありませんが、今後<code>@use</code>や<code>@forward</code>といった新しいモジュールシステムに置き換えようと思っています。</p>\n<p>また、Nuxt.jsプロジェクトに限った話ではなくDart Sassとnode-sassのコンパイルオプションは基本的に同じなので、node-sassからDart Sassへの移行も特に問題なく行うことができると思うので、気軽に導入を試すことができます。</p>\n"
      }
    },
    {
      "meta": {
        "id": "post-template-02",
        "title": "サンプル記事",
        "description": "このブログの記事テンプレートです。",
        "category": "Design",
        "tags": [
          "HTML",
          "CSS",
          "JavaScript"
        ],
        "status": "publish",
        "created_at": "2019-10-01",
        "updated_at": "2019-10-01"
      },
      "body": {
        "text": "\nはじめに\n\nこのブログの記事はMarkdown記法で作成されています。\n\nテキスト\n\nテキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト\n\nテキスト　リンクテキスト　テキスト　テキスト\n\nテキスト　強調テキスト　テキスト　テキスト\n\nテキスト　コードテキスト　テキスト　テキスト\n\n見出し\n\n見出しレベル2\n\n見出しレベル3\n\n見出しレベル4\n\n見出しレベル5\n\n見出しレベル6\n\nリスト\n\nテキスト\nテキスト\n  テキスト\n  テキスト\nテキスト\nテキスト\n\nテキスト\nテキスト\nテキスト\nテキスト\n\nブロック\n\n> 引用ブロック\n> 引用ブロック\n> 引用ブロック\n\nconst text = 'コードブロック'\nconsole.log(text)\n",
        "md": "\n\n## はじめに\n\nこのブログの記事はMarkdown記法で作成されています。\n\n## テキスト\n\nテキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト\n\nテキスト　[リンクテキスト](./)　テキスト　テキスト\n\nテキスト　**強調テキスト**　テキスト　テキスト\n\nテキスト　`コードテキスト`　テキスト　テキスト\n\n## 見出し\n\n## 見出しレベル2\n\n### 見出しレベル3\n\n#### 見出しレベル4\n\n##### 見出しレベル5\n\n###### 見出しレベル6\n\n## リスト\n\n- テキスト\n- テキスト\n  - テキスト\n  - テキスト\n- テキスト\n- テキスト\n\n1. テキスト\n1. テキスト\n1. テキスト\n1. テキスト\n\n## ブロック\n\n> 引用ブロック\n> 引用ブロック\n> 引用ブロック\n\n```js\nconst text = 'コードブロック'\nconsole.log(text)\n```\n",
        "html": "<h2>はじめに</h2>\n<p>このブログの記事はMarkdown記法で作成されています。</p>\n<h2>テキスト</h2>\n<p>テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト　テキスト</p>\n<p>テキスト　<a href=\"./\">リンクテキスト</a>　テキスト　テキスト</p>\n<p>テキスト　<strong>強調テキスト</strong>　テキスト　テキスト</p>\n<p>テキスト　<code>コードテキスト</code>　テキスト　テキスト</p>\n<h2>見出し</h2>\n<h2>見出しレベル2</h2>\n<h3>見出しレベル3</h3>\n<h4>見出しレベル4</h4>\n<h5>見出しレベル5</h5>\n<h6>見出しレベル6</h6>\n<h2>リスト</h2>\n<ul>\n<li>テキスト</li>\n<li>テキスト\n<ul>\n<li>テキスト</li>\n<li>テキスト</li>\n</ul>\n</li>\n<li>テキスト</li>\n<li>テキスト</li>\n</ul>\n<ol>\n<li>テキスト</li>\n<li>テキスト</li>\n<li>テキスト</li>\n<li>テキスト</li>\n</ol>\n<h2>ブロック</h2>\n<blockquote>\n<p>引用ブロック\n引用ブロック\n引用ブロック</p>\n</blockquote>\n<pre><code class=\"language-js\">const text = 'コードブロック'\nconsole.log(text)\n</code></pre>\n"
      }
    }
  ],
  "tags": [
    "Sass",
    "Nuxt.js",
    "JavaScript",
    "HTML",
    "Dart Sass",
    "CSS"
  ]
}